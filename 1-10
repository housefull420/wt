1.FORM VALIDATION:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Management System</title>
    <style>
        form {
            width: 300px;
            margin: 0 auto;
        }
        .error {
            color: red;
            font-size: 12px;
        }
    </style>
</head>
<body>

<form id="studentForm">
    <h2>Student Management System</h2>
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">
    <div class="error" id="usernameError"></div>
    
    <label for="email">Email:</label>
    <input type="email" id="email" name="email">
    <div class="error" id="emailError"></div>
    
    <label for="password">Password:</label>
    <input type="password" id="password" name="password">
    <div class="error" id="passwordError"></div>
    
    <label for="mobile">Mobile Number:</label>
    <input type="text" id="mobile" name="mobile">
    <div class="error" id="mobileError"></div>
    
    <button type="button" onclick="validateForm()">Submit</button>
</form>

<script>
function validateForm() {
    let isValid = true;

    // Clear previous error messages
    document.getElementById('usernameError').textContent = '';
    document.getElementById('emailError').textContent = '';
    document.getElementById('passwordError').textContent = '';
    document.getElementById('mobileError').textContent = '';

    // Username validation
    const username = document.getElementById('username').value;
    if (!/^[a-zA-Z0-9]{3,}$/.test(username)) {
        document.getElementById('usernameError').textContent = 'Username must be at least 3 characters long and contain only alphanumeric characters.';
        isValid = false;
    }

    // Email validation
    const email = document.getElementById('email').value;
    if (!/^\S+@\S+\.\S+$/.test(email)) {
        document.getElementById('emailError').textContent = 'Invalid email format.';
        isValid = false;
    }

    // Password validation
    const password = document.getElementById('password').value;
    if (password.length < 6) {
        document.getElementById('passwordError').textContent = 'Password must be at least 6 characters long.';
        isValid = false;
    }

    // Mobile number validation
    const mobile = document.getElementById('mobile').value;
    if (!/^\d{10}$/.test(mobile)) {
        document.getElementById('mobileError').textContent = 'Mobile number must be 10 digits.';
        isValid = false;
    }

    if (isValid) {
        alert('Form submitted successfully!');
        // Here you can add the code to submit the form
    }
}
</script>

</body>
</html>

1.b] http request and response
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Area Calculation</title>
</head>
<body>
    <form action="http://localhost:3000/calculate-area" method="get">
        <h3>Rectangle</h3>
        <label for="t1">Enter length:</label>
        <input type="number" id="t1" name="t1"><br><br>
        
        <label for="t2">Enter breadth:</label>
        <input type="number" id="t2" name="t2"><br><br>
        
        <h3>Circle</h3>
        <label for="t3">Enter radius:</label>
        <input type="number" id="t3" name="t3"><br><br>
        
        <h3>Square</h3>
        <label for="t4">Enter side:</label>
        <input type="number" id="t4" name="t4"><br><br>
        
        <button type="submit">Calculate Area</button>
    </form>
</body>
</html>

server.js
const http = require('http');
const url = require('url');

http.createServer((req, res) => {
    if (req.method === 'GET') {
        const q = url.parse(req.url, true).query;
        
        const length = Number(q.t1);
        const breadth = Number(q.t2);
        const radius = Number(q.t3);
        const side = Number(q.t4);
        
        const rectangleArea = length * breadth;
        const circleArea = Math.PI * radius * radius;
        const squareArea = side * side;
        
        res.writeHead(200, {'Content-Type': 'text/plain'});
        res.write(`Area of the rectangle is ${rectangleArea}\n`);
        res.write(`Area of the circle is ${circleArea}\n`);
        res.write(`Area of the square is ${squareArea}`);
        res.end();
    } else {
        res.writeHead(405, {'Content-Type': 'text/plain'});
        res.end('Method Not Allowed');
    }
}).listen(3000, () => {
    console.log('Server running at http://localhost:3000/');
});
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2.get method for bank
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1><b>LOGIN PAGE</b></h1>
    <form action="http://localhost:4000/login" method="get">
        Enter your name: <input type="text" name="username" value="" /><br><br>
        Enter your email: <input type="text" name="email" value="" /><br><br>
        Enter your qualification: <input type="text" name="qualification" value="" /><br><br>
        <input type="submit" name="login" value="login" />
    </form>
    <br><br>
</body>
</html>

server.js
const http = require('http');
const url = require('url');
const querystring = require('querystring');

function onRequest(request, response) {
    const path = url.parse(request.url).pathname;
    console.log('Request for ' + path + ' received.');

        const query = url.parse(request.url).query;
        const parsedQuery = querystring.parse(query);
        const name = parsedQuery["username"];
        const email = parsedQuery["email"];
        const qualification = parsedQuery["qualification"];

        response.writeHead(200, { 'Content-Type': 'text/html' });
        response.write('<h1>Login Details</h1>');
        response.write(`<p>Name: ${name}</p>`);
        response.write(`<p>Email: ${email}</p>`);
        response.write(`<p>Qualification: ${qualification}</p>`);
        response.end();
    }

http.createServer(onRequest).listen(4000);
console.log('Server started on http://localhost:4000');

2.b Mongoose
Npm install express
npm install mongoose
npm install express mongoose body-parser
Npm init
Give more enter
In json 
"scripts": {
    "start":"node index.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },

Then save package.json
Npm start

Index.js

const express = require('express');
const mongoose = require('mongoose');


const app = express();


mongoose.connect('mongodb://localhost:27017/student_management');


const studentSchema = new mongoose.Schema({
    name: String,
    age: Number,
    grade: String,
    email: String
});


const Student = mongoose.model('Student', studentSchema);


app.get('/submit_form', (req, res) => {
    const userInfo = req.query;
    console.log(userInfo);
    res.send(`Received the data: ${JSON.stringify(userInfo)}`);
});


app.listen(3000, () => {
    console.log('Server is running on http://localhost:3000');
});



Index.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Banking Application - Personal Information Form</title>
</head>
<body>
    <h1>Personal Information Form</h1>
    <form action="http://localhost:3000/submit_form" method="GET">
        <label for="fullName">Full Name:</label>
        <input type="text" id="fullName" name="fullName" required><br><br>


        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br><br>


        <label for="address">Address:</label>
        <textarea id="address" name="address" rows="4" cols="50" required></textarea><br><br>


        <label for="phone">Phone Number:</label>
        <input type="text" id="phone" name="phone" required><br><br>


        <button type="submit">Submit</button>
    </form>
</body>
</html>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
